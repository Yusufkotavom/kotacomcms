/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    posts: Post;
    projects: Project;
    products: Product;
    services: Service;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title?: string | null;
  slug?: string | null;
  status?: ('draft' | 'published') | null;
  category?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  description?: string | null;
  published?: string | null;
  lastUpdated?: string | null;
  coverImage?: string | null;
  tags?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  body?: string | null;
  format?: ('md' | 'html') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title?: string | null;
  slug?: string | null;
  category?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  country?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  locale?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  organiser?: string | null;
  imageUrl?: string | null;
  published?: string | null;
  description?: string | null;
  body?: string | null;
  format?: ('md' | 'html') | null;
  cost?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  url?: string | null;
  gygUrl?: string | null;
  mapsUrl?: string | null;
  verify?: string | null;
  review?: string | null;
  getInvolved?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title?: string | null;
  slug?: string | null;
  status?: ('draft' | 'published') | null;
  category?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  country?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  locale?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  imageUrl?: string | null;
  price?: string | null;
  published?: string | null;
  description?: string | null;
  body?: string | null;
  format?: ('md' | 'html') | null;
  verify?: string | null;
  imageUrl2?: string | null;
  imageUrl3?: string | null;
  review?: string | null;
  features?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  name?: string | null;
  type?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  url?: string | null;
  otherUrl?: string | null;
  tokopediaUrl?: string | null;
  shopeeUrl?: string | null;
  blibliUrl?: string | null;
  bukalapakUrl?: string | null;
  lazadaUrl?: string | null;
  mapsUrl?: string | null;
  affiliateCode?: string | null;
  commissionRate?: string | null;
  affiliateProvider?: string | null;
  discountCode?: string | null;
  specialOffer?: string | null;
  ctaText?: string | null;
  priority?: ('featured' | 'bestseller' | 'sale' | 'new') | null;
  externalRating?: string | null;
  soldCount?: string | null;
  originalPrice?: string | null;
  isSponsored?: boolean | null;
  targetAudience?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title?: string | null;
  slug?: string | null;
  category?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  imageUrl1?: string | null;
  published?: string | null;
  wilayah?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  provider?: string | null;
  type?:
    | {
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  price?: string | null;
  url?: string | null;
  whatsappUrl?: string | null;
  mapsUrl?: string | null;
  verify?: string | null;
  body?: string | null;
  format?: ('md' | 'html') | null;
  imageUrl2?: string | null;
  imageUrl3?: string | null;
  review?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  description?: string | null;
  publishDate?: string | null;
  author?: string | null;
  image?: string | null;
  draft?: boolean | null;
  body?: string | null;
  format?: ('md' | 'html') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  category?:
    | T
    | {
        value?: T;
        id?: T;
      };
  description?: T;
  published?: T;
  lastUpdated?: T;
  coverImage?: T;
  tags?:
    | T
    | {
        value?: T;
        id?: T;
      };
  body?: T;
  format?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?:
    | T
    | {
        value?: T;
        id?: T;
      };
  country?:
    | T
    | {
        value?: T;
        id?: T;
      };
  locale?:
    | T
    | {
        value?: T;
        id?: T;
      };
  organiser?: T;
  imageUrl?: T;
  published?: T;
  description?: T;
  body?: T;
  format?: T;
  cost?:
    | T
    | {
        value?: T;
        id?: T;
      };
  url?: T;
  gygUrl?: T;
  mapsUrl?: T;
  verify?: T;
  review?: T;
  getInvolved?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  category?:
    | T
    | {
        value?: T;
        id?: T;
      };
  country?:
    | T
    | {
        value?: T;
        id?: T;
      };
  locale?:
    | T
    | {
        value?: T;
        id?: T;
      };
  imageUrl?: T;
  price?: T;
  published?: T;
  description?: T;
  body?: T;
  format?: T;
  verify?: T;
  imageUrl2?: T;
  imageUrl3?: T;
  review?: T;
  features?:
    | T
    | {
        value?: T;
        id?: T;
      };
  name?: T;
  type?:
    | T
    | {
        value?: T;
        id?: T;
      };
  url?: T;
  otherUrl?: T;
  tokopediaUrl?: T;
  shopeeUrl?: T;
  blibliUrl?: T;
  bukalapakUrl?: T;
  lazadaUrl?: T;
  mapsUrl?: T;
  affiliateCode?: T;
  commissionRate?: T;
  affiliateProvider?: T;
  discountCode?: T;
  specialOffer?: T;
  ctaText?: T;
  priority?: T;
  externalRating?: T;
  soldCount?: T;
  originalPrice?: T;
  isSponsored?: T;
  targetAudience?:
    | T
    | {
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?:
    | T
    | {
        value?: T;
        id?: T;
      };
  imageUrl1?: T;
  published?: T;
  wilayah?:
    | T
    | {
        value?: T;
        id?: T;
      };
  provider?: T;
  type?:
    | T
    | {
        value?: T;
        id?: T;
      };
  price?: T;
  url?: T;
  whatsappUrl?: T;
  mapsUrl?: T;
  verify?: T;
  body?: T;
  format?: T;
  imageUrl2?: T;
  imageUrl3?: T;
  review?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  publishDate?: T;
  author?: T;
  image?: T;
  draft?: T;
  body?: T;
  format?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}